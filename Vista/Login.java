
package Vista;
import Controlador.Controladorinicio;
import Modelo.ModeloConexion;
import Modelo.SincronizeApp;

import java.awt.*;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.net.Socket;
import java.net.URL;
import java.net.URLConnection;
import java.net.UnknownHostException;

import javax.swing.*;


/**
 * La Clase Login, es la clase principal de arranque de la aplicación, no hay que pasarle ningun parametro necesareo para su funcionamiento,
 * El constructor de la clase desencadenada por el metodo main solo mostrara  en pantalla los componentes de la vista de login, 
 * para que el usuario pueda loguearse..
 * @author Jnatn'h
 * @since v 1.1 
 */
@SuppressWarnings("serial")
public class Login extends JFrame {
    
 /**************************************/
 /*       Campos de clase              */
 /**************************************/
    
    // variable del tipo Controladorinicio... 
    private Controladorinicio controlador; 

 /**************************************/
 /*       Metodos de clase             */
 /**************************************/    

    /**
     * El metodo static cerrarVista, se puede invocar desde cualquier instancia, con la unica finalidad de cerrar el sistema de manera inmediata
     * este metedo ademas de cerrar el sistema se encarga de cerrar la conexion a la base de datos... 
     */
    public static void cerrarVista(){
     
      System.exit(0);
    }
   
    /**
     * Metodo encapsulado, utilizado para asignar todos los listener oyentes de los componentes necesareos en el objeto... 
     */
    private void asignarListener(){
        getJpass().addKeyListener(getController());
        getLogininiciar().addActionListener(getController());
        getSalir().addActionListener(getController());       
    }

/**************************************/
/*         GETTERS Y SETTERS          */
/**************************************/
    
    /**
     * El Metodo setController recibe por parametro un objeto de tipo de Controladorinicio, la cual es asociado  a la variable interna
     * del mismo tipo... 
     * @param controller parametro de objeto ControladorInicio  
     */
    private void setController(Controladorinicio controller){
        this.controlador = controller;
        this.asignarListener();
    }
    
    /**
     * 
     * @return Devuelve un objeto de tipo ControladorInicio ...  
     */
    public Controladorinicio getController(){
        return this.controlador;
    }
    
    public JButton getSalir(){
        return this.salir;
    }
    
    public JButton getLogininiciar(){
        return logininiciar;
    }
    
    public JTextField getJuser(){
        return juser;
    }
    
    public void setJuser(JTextField juser){
        this.juser = juser;
    }
    
    public final JPasswordField getJpass(){
        return jpass;
    }
    
    public void setJpass(JPasswordField jpass){
        this.jpass = jpass;
    }
    
    public JLabel getLeyenda(){
        return this.leyenda;
    }
    
    public void setLeyenda(JLabel leyenda){
        this.leyenda= leyenda;
    }
 
/**************************************/
/*            CONSTRUCTOR             */
/**************************************/
    
    /**
     * El constructor Login es el encargado de inicializar los componentes y metodos relacionados al mismo... 
     */
    public Login() {         
        initComponents();
        this.juser.requestFocus();
        setLocationRelativeTo(null);
        setResizable(false);
        
        this.getLogininiciar().setEnabled(false);
        this.getLogininiciar().setCursor(new Cursor(Cursor.WAIT_CURSOR));
      Runnable run  =  new Hilo(this);
      
      Thread t = new Thread(run);
      t.setPriority(Thread.MAX_PRIORITY);
      t.start();
      
      Runnable sinc = new Sinc();
      
      Thread t1 = new Thread(sinc);
      t1.setPriority(Thread.MAX_PRIORITY);
      t1.start();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   
    private void initComponents() {

        header = new org.edisoncor.gui.panel.Panel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        juser = new javax.swing.JTextField();
        jpass = new javax.swing.JPasswordField();
        logininiciar = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        jLabelformlogin = new javax.swing.JLabel();
        leyenda = new javax.swing.JLabel();
        jLabelfondologin = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("vista-login");
        setAutoRequestFocus(false);
        setFocusCycleRoot(false);
        setMaximumSize(new java.awt.Dimension(600, 600));
        setMinimumSize(new java.awt.Dimension(600, 600));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(600, 600));
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setBackground(new java.awt.Color(255, 102, 102));
        header.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/imagen/header-login.png"))); // NOI18N
        header.setMinimumSize(new java.awt.Dimension(1024, 0));
        header.setOpaque(false);
        header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 97));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Clave:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, -1, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Usuario:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, -1, -1));

        juser.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        juser.setForeground(new java.awt.Color(51, 51, 51));
        juser.setToolTipText("");
        juser.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        juser.setVerifyInputWhenFocusTarget(false);
        juser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                juserFocusGained(evt);
            }
        });
        juser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                juserKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                juserKeyTyped(evt);
            }
        });
        getContentPane().add(juser, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, 200, 30));

        jpass.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jpass.setToolTipText("Debe introducir su contraseña");
        jpass.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jpass.setFocusCycleRoot(true);
        jpass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jpassFocusGained(evt);
            }
        });
        jpass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jpassKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jpassKeyTyped(evt);
            }
        });
        getContentPane().add(jpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 200, 30));

        logininiciar.setBackground(new java.awt.Color(255, 102, 51));
        logininiciar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        logininiciar.setForeground(new java.awt.Color(255, 255, 255));
        logininiciar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/imagen/iniciar secion.png"))); // NOI18N
        logininiciar.setMnemonic('I');
        logininiciar.setText("Iniciar");
        logininiciar.setToolTipText("Perminite inicia sesion");
        logininiciar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logininiciar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logininiciar.setIconTextGap(10);
        logininiciar.setInheritsPopupMenu(true);
        logininiciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logininiciarActionPerformed(evt);
            }
        });
        getContentPane().add(logininiciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 380, 120, -1));

        salir.setBackground(new java.awt.Color(255, 102, 51));
        salir.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        salir.setForeground(new java.awt.Color(255, 255, 255));
        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/imagen/salir1.1.png"))); // NOI18N
        salir.setMnemonic('S');
        salir.setText("Salir");
        salir.setToolTipText("Permite salir de la venta");
        salir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salir.setIconTextGap(10);
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        getContentPane().add(salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 380, 100, -1));

        jLabelformlogin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelformlogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/imagen/login1 (2).png"))); // NOI18N
        jLabelformlogin.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabelformloginAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jLabelformlogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabelformloginKeyPressed(evt);
            }
        });
        getContentPane().add(jLabelformlogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, -1));

        leyenda.setBackground(new java.awt.Color(255, 255, 255));
        leyenda.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        leyenda.setForeground(new java.awt.Color(255, 255, 255));
        leyenda.setMaximumSize(new java.awt.Dimension(30, 580));
        leyenda.setMinimumSize(new java.awt.Dimension(30, 580));
        getContentPane().add(leyenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 570, 600, 30));

        jLabelfondologin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/imagen/fondologin.png"))); // NOI18N
        jLabelfondologin.setMaximumSize(new java.awt.Dimension(600, 600));
        jLabelfondologin.setMinimumSize(new java.awt.Dimension(600, 600));
        jLabelfondologin.setOpaque(true);
        jLabelfondologin.setPreferredSize(new java.awt.Dimension(600, 600));
        getContentPane().add(jLabelfondologin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 600));

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {
    	System.exit(0);
    }

    private void jLabelformloginAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabelformloginAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelformloginAncestorAdded

    private void logininiciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logininiciarActionPerformed

    }//GEN-LAST:event_logininiciarActionPerformed

    private void juserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_juserKeyPressed
     if (evt.getKeyCode()==KeyEvent.VK_TAB){
           this.jpass.requestFocus();   
        }
    }//GEN-LAST:event_juserKeyPressed

    private void juserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_juserKeyTyped
      /*char b = evt.getKeyChar();
        if((juser.getText().length()>=20))
          evt.consume();*/
         char b = evt.getKeyChar();
        
            if(juser.getText().length()>20){
                evt.consume();
            }
            if(b == KeyEvent.VK_TAB)
            {
                this.jpass.requestFocus();
            }
            
    }//GEN-LAST:event_juserKeyTyped

    private void jLabelformloginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabelformloginKeyPressed
      if (evt.getKeyCode()==KeyEvent.VK_TAB){
           jpass.requestFocus();
        }
    }//GEN-LAST:event_jLabelformloginKeyPressed

    private void jpassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpassKeyTyped
        if((jpass.getPassword().length>=20)) evt.consume();       
    }//GEN-LAST:event_jpassKeyTyped

    private void jpassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpassKeyPressed

    }//GEN-LAST:event_jpassKeyPressed

    private void juserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_juserFocusGained

        String leyend = "Debe ingresar su nombre de usuario...";
        this.getLeyenda().setText(leyend);
    }//GEN-LAST:event_juserFocusGained

    private void jpassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpassFocusGained
          String leyend = "Debe ingresar su contraseña";
        this.getLeyenda().setText(leyend);
    }//GEN-LAST:event_jpassFocusGained
   
    /**
     * @param args the command line arguments
     * 
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
          Login ini  = new Login();
          ini.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.panel.Panel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelfondologin;
    private javax.swing.JLabel jLabelformlogin;
    private javax.swing.JPasswordField jpass;
    public javax.swing.JTextField juser;
    private javax.swing.JLabel leyenda;
    private javax.swing.JButton logininiciar;
    private javax.swing.JButton salir;
    // End of variables declaration//GEN-END:variables
    
    private class Hilo implements Runnable{
    	Login login;
    	public Hilo(Login login) {
    		this.login = login;
    	}
		@Override
		public void run() {
			
			login.setController(new Controladorinicio(login));  
			login.getLogininiciar().setEnabled(true);
		    login.getLogininiciar().setCursor(new Cursor(Cursor.HAND_CURSOR));
			
		}
    	
    	
    	
    }
    
    class Sinc implements Runnable{
    
    	SincronizeApp sincronizador;
    	boolean internet = false;
    	Sinc(){
//    		String url = "www.megajdcc.com.ve";
//    		try {
//				Socket inter = new Socket(url,80);
//				
//				if(inter.isConnected()) {
//					System.out.println("si hay conexion a internet ");
//					internet = true;
//				}
//			} catch (UnknownHostException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			} catch (IOException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//    		
    		
//    		try {
//    			String command = "ping -c 1 google.com";
//				internet = Runtime.getRuntime().exec(command).waitFor() == 0;
//			} catch (InterruptedException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			} catch (IOException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			} 

    		
    	}
    	
		@Override
		public void run() {
    		try {
    			URL ruta = new URL("https://www.google.com.ve");
        		URLConnection rutaC = ruta.openConnection();
        		rutaC.connect();
        		internet = true;
			} catch (Exception e) {
				e.printStackTrace();
				internet = false;
			}
    		
			if(internet) {
				Object[] dato = {"Sincronizar ahora", "Despues"};
			Object selectvalue = JOptionPane.showOptionDialog(null,
					"Hay conexion a internet desea actualizar la data en la nube?",
					"Sincronizador",
					JOptionPane.DEFAULT_OPTION,
					JOptionPane.QUESTION_MESSAGE,
					null, dato, dato[0]);
			System.out.println("opcion " + selectvalue.toString());
			if(selectvalue.equals((Integer) 0)) {
				System.out.println("sincronizando");
				sincronizador = new SincronizeApp();
			}else {
				System.out.println("decidio no sincronizar...");
			}
			
			
		
			}else {
				System.out.println("no hay internet");
			}
		}
    }
}
